package org.sagebionetworks.schema.generator;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.io.File;
import java.io.IOException;

import javax.tools.JavaCompiler;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.sagebionetworks.schema.adapter.JSONObjectAdapterException;
import org.sagebionetworks.schema.generator.handler.HandlerFactory;
import org.sagebionetworks.schema.generator.handler.schema03.HandlerFactoryImpl03;

/**
 * Tests that java keywords e.g. "null, "enum", etc. can be used as property keys
 */
public class KeywordTest {
	//directory where autogenerated classes will live
	File outputDir;

	@BeforeEach
	public void setUp() throws Exception {
		// Create a temp directory for output
		outputDir = FileUtils.createTempDirectory("output");
	}

	@AfterEach
	public void tearDown() throws Exception {
		// Delete the output directory
		FileUtils.recursivelyDeleteDirectory(outputDir);
		assertFalse(outputDir.exists());
	}

	/**
	 * Tests behavior of how marshalling works when a json has an array that should contain an enum
	 *
	 * @throws IOException
	 * @throws JSONObjectAdapterException
	 * @throws ClassNotFoundException
	 */
	@Test
	public void loadFileWithEnum() throws IOException,
			JSONObjectAdapterException, ClassNotFoundException {

		// Load form the sample file
		File sampleFile = new File("src/test/resources/KeywordAsProperties.json");
		assertTrue(sampleFile.exists(),
				"Test file does not exist: " + sampleFile.getAbsolutePath());
		// Create the class
		HandlerFactory factory = new HandlerFactoryImpl03();
		// Generate the class
		SchemaToPojo.generatePojos(sampleFile, outputDir, null, factory, new StringBuilder());
		// Make sure the file exists
		File result = new File(outputDir, "KeywordAsProperties.java");
		assertTrue(result.exists());
	}

}
